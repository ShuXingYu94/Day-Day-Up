def readFASTA(FASTA):
    Index = []
    Seq = []
    n = 0
    for i in FASTA:
        if '>' in i and n == 0:
            txt = ''
            Index.append(i.replace('>', '').replace('\n', ''))  # replace('\n','')
            n += 1
        elif '>' in i and n > 0:
            Seq.append(txt)
            txt = ''
            Index.append(i.replace('>', '').replace('\n', ''))
        else:
            txt += i.strip()
    Seq.append(txt)
    return Seq, Index


def rev(Seq):
    Seq = Seq[::-1]
    dna = {"A": "T", "T": "A", "C": "G", "G": "C"}
    rev = ""
    for base in Seq:
        rev += dna[base]
    return rev


def transDNAtoProtein(Seq):
    protein: str = ''
    amino: dict = {'TTT': 'F', 'CTT': 'L', 'ATT': 'I', 'GTT': 'V',
                   'TTC': 'F', 'CTC': 'L', 'ATC': 'I', 'GTC': 'V',
                   'TTA': 'L', 'CTA': 'L', 'ATA': 'I', 'GTA': 'V',
                   'TTG': 'L', 'CTG': 'L', 'ATG': 'M', 'GTG': 'V',
                   'TCT': 'S', 'CCT': 'P', 'ACT': 'T', 'GCT': 'A',
                   'TCC': 'S', 'CCC': 'P', 'ACC': 'T', 'GCC': 'A',
                   'TCA': 'S', 'CCA': 'P', 'ACA': 'T', 'GCA': 'A',
                   'TCG': 'S', 'CCG': 'P', 'ACG': 'T', 'GCG': 'A',
                   'TAT': 'Y', 'CAT': 'H', 'AAT': 'N', 'GAT': 'D',
                   'TAC': 'Y', 'CAC': 'H', 'AAC': 'N', 'GAC': 'D',
                   'TAA': '*', 'CAA': 'Q', 'AAA': 'K', 'GAA': 'E',
                   'TAG': '*', 'CAG': 'Q', 'AAG': 'K', 'GAG': 'E',
                   'TGT': 'C', 'CGT': 'R', 'AGT': 'S', 'GGT': 'G',
                   'TGC': 'C', 'CGC': 'R', 'AGC': 'S', 'GGC': 'G',
                   'TGA': '*', 'CGA': 'R', 'AGA': 'R', 'GGA': 'G',
                   'TGG': 'W', 'CGG': 'R', 'AGG': 'R', 'GGG': 'G'}
    for i in range(0, len(Seq), 3):
        if i + 2 > len(Seq) or i + 2 == len(Seq):
            break
        else:
            protein += amino[Seq[i:i + 3]]
    return protein


FASTA = open('/Users/zhuxingyu/Desktop/test.txt')

seqlist, indexlist = readFASTA(FASTA)
seq = seqlist[0]
rseq = rev(seq)
ORF = []

for i in range(0, 3):
    ORF.append(seq[i:])
    ORF.append(rseq[i:])
proteinlist = list(map(transDNAtoProtein, ORF))
# print(proteinlist)
aalist = []
candidate = []
for aaseq in proteinlist:
    aalist.extend(aaseq.split('*')[:-1])
for unit in aalist:
    for n in range(0, len(unit)):
        if unit[n] != 'M':
            continue
        else:
            candidate.append(unit[n:])

# print(aalist, candidate)
candidates = list(set(candidate))
candidates.sort()
for element in candidates:
    print(element)

FASTA.close()
